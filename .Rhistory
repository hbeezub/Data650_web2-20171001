ylab("HOmeRuns")+
xlab("Team Names")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR,data_id-name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
ylab("HOmeRuns")+
xlab("Team Names")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
ggiraph(code=print(g),hover_css="fill:red;stroke:black")
library(flexdashboard)
library(Lahman)
library(dplyr)
library(ggplot2)
library(ggiraph)
result<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,SO,HR)
ggplot()+
geom_point(data=result,aes(x=SO,y=HR))+
xlab('strikeouts')+
ylab('Homeruns')
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages("devtools")
library(devtools)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("flexdashboard")
library(flexdashboard)
open ~/Library/Logs/CrashReporter
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
gutenberg_works(title=='Dracula')
library(gutenbergr)
gutenberg_works(title=='Dracula')
?gutenbergr
gutenberg_works(title=='The Modern Prometheus')
gutenberg_works(title=='Frankenstein; or, The Modern Prometheus')
?gutenberg_work
?gutenberg_works
gutenberg_works(has_text=='Frankenstein')
gutenberg_works(title(has_text=='Frankenstein'))
gutenberg_works(has_text=='Frankenstein')
gutenberg_works(has_text=='Dracula')
gutenberg_works(author==str_extract(author,'Shelly,Mary'))
gutenberg_works(author==str_extract(author,'Shelley,Mary'))
gutenberg_works(author==str_extract(author,'Shelley, Mary'))
gutenberg_works(author=='Shelley, Mary')
gutenberg_works(author=='Shelley,Mary')
gutenberg_authors(author=='Shelley,Mary')
gutenberg_authors {gutenbergr}
gutenberg_works(str_detect(author, "Austen"))
gutenberg_subjects
gutenberg_works(str_detect(author, "Austen"))
library(stringr)
gutenberg_works(str_detect(author, "Austen"))
gutenberg_works(str_detect(author, "Shelley"))
gutenberg_works(str_detect(title, "Frankenstein"))
gutenberg_works(str_detect(title, 'Frankenstein'))
gutenberg_works(str_detect(title, 'Carrie'))
gutenberg_works(str_detect(author, "King, St"))
gutenberg_works(str_detect(author, "King"))
gutenberg_works(str_detect(title, 'CARRIE'))
gutenberg_works(str_detect(title, 'Carrie'))
me<-gutenberg_works(str_detect(title, 'Carrie'))
me
tail(me)
?guttenberg_works
library(dplyr)
library(tidytext)
library(stringr)
library(wordcloud)
library(gutenbergr)
library(knitr)
library(ggplot2)
gutenberg_download(345)
dracula<-gutenberg_download(345)
dim(dracula)
dracula$line<-1:15568
dracula$gutenberg_id<-NULL
dracula
dracula%.%
unnest_tokens(word,text)
dracula%>%
unnest_tokens(word,text)
dracula_words<-dracula%>%
unnest_tokens(word,text)
racula_words
dracula_words
65 %/% 80
73 %/% 80
85 %/% 80
170%/% 80
dracula_words$group<-dracula_words$line %/% 80
dracula_words$group
dracula_words
bing<-get_sentiments('bing')
bing
dracula_words<-inner_join(dracula_words,bing)
dracula_words
dracula_words$score<-1
dracula_words
rowneg<-which(dracula_words$sentiment == 'negative')
dracula_words$score[rowneg]
dracula_words
rowneg
dracula_words$score[rowneg]<--1
dracula_words$score[rowneg]<--1
dracula_words
dracula_words%.%
group_by(group)%>%
summarize(group_sentiment=sum(score))
dracula_words%>%
group_by(group)%>%
summarize(group_sentiment=sum(score))
dracula_sent<-dracula_words%>%
group_by(group)%>%
summarize(group_sentiment=sum(score))
deacula_sent
ggplot()+
geom_point(data=dracula_sent, aes(x=group, y=group_sentiment),stat='identity')
ggplot()+
geom_col(data=dracula_sent, aes(x=group, y=group_sentiment))
ggplot()+
geom_col(data=dracula_sent, aes(x=group, y=group_sentiment),fill='sienna',color='black')
_sentiments('afinn')
get_sentiments('afinn')
gutenberg_download(345)
dracula<-gutenberg_download(345)
dim(dracula
)
dracula$line<-1:15568
dracula$gutenberg_id<-NULL
dracula
dracula_words<-dracula%>%
unnest_tokens(word,text)
dracula_words
dracula_words$group<-dracula_words$line %/% 80
dracula_words$group
dracula_words
afinn<-get_sentiments('afinn')
afinn
inner_join(dracula_words,afinn)
dracula_words<-inner_join(dracula_words,afinn)
dracula_words%>%
group_by(group)%>%
summarize(group_sentiment=sum(score))
dracula_sent<-dracula_words%>%
group_by(group)%>%
summarize(group_sentiment=sum(score))
dracula_sent
ggplot()+
geom_col(data=dracula_sent, aes(x=group, y=group_sentiment),fill='sienna',color='black')
dracula_words<-inner_join(dracula_words,afinn)
dracula_sent_finn<-dracula_words%>%
group_by(group)%>%
summarize(group_sentiment=sum(score))
dracula_sent_finn
ggplot()+
geom_col(data=dracula_sent_finn, aes(x=group, y=group_sentiment),fill='sienna',color='black')
dracula_words<-inner_join(dracula_words,bing)
dracula_words$score<-1
dracula_words
rowneg<-which(dracula_words$sentiment == 'negative')
dracula_words
dracula_words$score[rowneg]<--1
dracula_words
dracula_sent<-dracula_words%>%
group_by(group)%>%
summarize(group_sentiment=sum(score))
ggplot()+
geom_col(data=dracula_sent, aes(x=group, y=group_sentiment),fill='sienna',color='black')
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%.%
arrange(count)
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())
dracula_words
dracula_words%>%
filter(sentiment=='positive')
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)
dracula_words%>%
filter(sentiment=='positive')
library(dplyr)
dracula_words%>%
filter(sentiment=='positive'
)
dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
cord_flip()
library(ggplot2)
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
cord_flip()
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
cord_flip()
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
coord_flip()
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
coord_flip()
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=53)
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
coord_flip()
dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=53)
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
coord_flip()
dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
coord_flip()
dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=53)
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=53)
ggplot()+
geom_bar(data=dracula_neg, aes(x=word, y=count),stat='identity' )+
coord_flip()
ggplot()+
geom_bar(data=dracula_comp, aes(x=word, y=count),stat='identity' )
dracula_comp<-rbind(dracula_pos, dracula-neg)
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
dracula_comp<-rbind(dracula_pos, dracula-neg)
dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=53)
dracula_neg<-dracula_words%>%
filter(sentiment=='negative')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=53)
dracula_comp<-rbind(dracula_pos, dracula-neg)
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
ggplot()+
geom_bar(data=dracula_pos, aes(x=word, y=count),stat='identity' )
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n()
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
dracula_pos<-dracula_words%>%
filter(sentiment=='positive')%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)%>%
filter(count>=66)
dracula_pos$word<-factor(dracula_pos$word, levels=dracula_pos$word)
ggplot()+
geom_bar(data=dracula_pos, aes(x=word, y=count),stat='identity' )
install_version('blogdown',version ='2.0')
library(blogdown)
library(flexdashboard)
library(ggplot2)
library(dplyr)
library(lubridate)
accidents<-read.csv("Accidents0515.csv",header=TRUE,stringsAsFactors=FALSE)
q()
2+2
2-2 # notice
2^3
2**3
9^(1/2)
9^(1/3)
# (notice the #) Comment: get an average of 5 numbers
# Parentheses are very important!
(1 + 3 + 2 + 12 + 8)/5
# (notice the #) Comment: get an average of 5 numbers
# Parentheses are very important!
(1 + 3 + 2 + 12 + 8)/5
#this is a multi-line set of commands
# assign a variable to a value: use a left arrow (<-)
# if copying and pasting, you may need a semi-colon at end of line
x <- 3 # or x = 3;
y <- 5 # or y = 5;
x * y;
x <- 20 # reassign x
x * y
pi
x <- c(74, 122, 235, 111, 292)
mean(x)
sum(x)/length(x)
x[3]
round(sum(x-mean(x)),10)
round (10234,-2)
summary(x)
babies <- read.csv("http://math.mercyhurst.edu/~sousley/STAT_139/data/babies.csv", header=T)
babies
babies$id
summary(babies)
Orange
library(RCurl)
PSDS_PATH <- file.path('~', 'statistics-for-data-scientists')
download_from_google_drive <- function(id, fname, path)
{
url <- sprintf("https://drive.google.com/uc?export=download&id=%s", id)
data <- getBinaryURL(url, followlocation = TRUE, ssl.verifypeer = FALSE)
dest <- file.path(path, 'data', fname)
writeBin(data, dest, useBytes = TRUE)
}
## Import state data
download_from_google_drive(id="0B98qpkK5EJembFc5RmVKVVJPdGc", fname='state.csv', path=PSDS_PATH)
## Airline data
download_from_google_drive(id="0B98qpkK5EJemcmZYX2VhMHBXelE", fname='dfw_airline.csv', path=PSDS_PATH)
# packages needed for chapter 1
library(dplyr)
library(tidyr)
library(ggplot2)
library(vioplot)
library(ascii)
library(corrplot)
library(descr)
install.packages("descr")
library(descr)
# Import the datasets needed for chapter 1
PSDS_PATH <- file.path('~', 'statistics-for-data-scientists')
dir.create(file.path(PSDS_PATH, 'figures'))
state <- read.csv(file.path(PSDS_PATH, 'data', 'state.csv'))
## Import state data
download_from_google_drive(id="0B98qpkK5EJembFc5RmVKVVJPdGc", fname='state.csv', path=PSDS_PATH)
## Airline data
download_from_google_drive(id="0B98qpkK5EJemcmZYX2VhMHBXelE", fname='dfw_airline.csv', path=PSDS_PATH)
download_from_google_drive(id="0B98qpkK5EJemMzZYZHZJaF9va0U", fname='airline_stats.csv', path=PSDS_PATH)
setwd("C:/Users/hbeezub/Desktop/Data650_web2-20171001")
setwd("C:/Users/hbeezub/Desktop/Data650_web2-20171001")
setwd("C:/Users/hbeezub/Desktop/Data650_web2-20171001")
